{"version":3,"sources":["components/ProjectCard.js","cat.png","components/Cat.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectCard","props","className","title","id","target","rel","href","github","live","description","Cat","useState","count","setCount","rotate","transform","color","useEffect","setTimeout","window","open","style","src","cat","alt","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGe,SAASA,EAAYC,GAChC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,6BAAKD,EAAME,UAEf,sBAAKD,UAAU,OAAOE,GAAG,QAAzB,UACI,mBAAGC,OAAO,SAASC,IAAI,aAAaC,KAAMN,EAAMO,OAAhD,gCACA,mBAAGH,OAAO,SAASC,IAAI,aAAaC,KAAMN,EAAMQ,KAAhD,iCAEJ,qBAAKP,UAAU,OAAOE,GAAG,OAAzB,SACI,4BAAIH,EAAMS,mB,WCdX,G,MAAA,IAA0B,iCCI1B,SAASC,IAAO,IAAD,EACAC,mBAAS,GADT,mBACnBC,EADmB,KACZC,EADY,KAGpBC,EAAS,CACXC,UAAU,UAAD,OAAoB,GAARH,EAAZ,SAGPI,EAAQ,CACVA,MAAM,OAAD,OAAS,IAAT,KAAiB,IAAOJ,EAAM,IAAM,IAApC,aAA6C,IAAOA,EAAM,IAAM,IAAhE,MAUT,OAPAK,qBAAU,WACO,MAAVL,IACCM,YAAW,kBAAMC,OAAOC,KAAK,kCAAiC,IAC9DF,YAAW,kBAAML,EAAS,KAAI,QAEnC,CAACD,IAGA,sBAAKX,UAAU,UAAf,UACI,qBAAKoB,MAAOL,EAAZ,SACKJ,IAEL,qBAAKU,IAAKC,EACTC,IAAI,WACJH,MAAOP,EACPW,QAAS,WACNZ,EAASD,EAAQ,SCiBlBc,MA5Cf,WACE,OACE,sBAAKzB,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sDACA,sDAEF,sBAAKA,UAAU,WAAf,UACE,+DACA,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAAaC,MAAM,YACjBK,OAAO,0BACPC,KAAK,0BACLC,YAAY,yOAGd,cAAC,EAAD,CAAaP,MAAM,YACjBK,OAAO,0BACPC,KAAK,0BACLC,YAAY,4OAGd,cAAC,EAAD,CAAaP,MAAM,YACjBK,OAAO,0BACPC,KAAK,0BACLC,YAAY,6KAGd,cAAC,EAAD,CAAaP,MAAM,YACjBK,OAAO,0BACPC,KAAK,0BACLC,YAAY,mLAKlB,sBAAKR,UAAU,MAAf,UACE,4EACA,cAAC,EAAD,WC9BO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31695ff7.chunk.js","sourcesContent":["import './ProjectCard.css'\r\n\r\n//props: title, github link, live link, description\r\nexport default function ProjectCard(props) {\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"item\">\r\n                <h3>{props.title}</h3>\r\n            </div>\r\n            <div className=\"item\" id=\"links\">\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={props.github}>ðŸ‘¾Github</a>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={props.live}>ðŸš€Live</a>\r\n            </div>\r\n            <div className=\"item\" id=\"desc\">\r\n                <p>{props.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/cat.a05662d2.png\";","import { useState, useEffect } from 'react'\r\nimport './Cat.css'\r\nimport cat from '../cat.png'\r\n\r\nexport default function Cat() {\r\n    const [count, setCount] = useState(0)\r\n\r\n    const rotate = {\r\n        transform: `rotate(${count * 10}deg)`\r\n    }\r\n\r\n    const color = {\r\n        color: `rgb(${255}, ${255 - (count/100 * 255)}, ${255 - (count/100 * 255)})`\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(count === 100) {\r\n            setTimeout(() => window.open(\"https://youtu.be/j1Oegd_pLUk\"), 50);\r\n            setTimeout(() => setCount(0), 100);\r\n        }\r\n    }, [count]) \r\n\r\n    return (\r\n        <div className=\"catspin\">\r\n            <div style={color}>\r\n                {count}\r\n            </div>\r\n            <img src={cat}\r\n             alt=\"meowmeow\"\r\n             style={rotate}\r\n             onClick={() => {\r\n                setCount(count + 1);\r\n             }}/>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport ProjectCard from './components/ProjectCard'\nimport Cat from './components/Cat'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Lucas GuzmÃ¡n-Finn</h1>\n        <h3>Assignment 5 I DO</h3>\n      </div>\n      <div className=\"projects\">\n        <h3>PROJECTS (reusing components)</h3>\n        <div className=\"cards\">\n          <ProjectCard title=\"Project 1\" \n            github=\"https://www.google.com/\" \n            live=\"https://www.google.com/\" \n            description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam lobortis \n            metus sit amet felis interdum dictum. Curabitur gravida lacus quis nunc fermentum lacinia. Aenean sed quam maximus, posuere magna nec, condimentum felis. \"\n          />\n          <ProjectCard title=\"Project 2\" \n            github=\"https://www.google.com/\" \n            live=\"https://www.google.com/\" \n            description=\"Ut quis leo nunc. Donec dolor metus, blandit ac ante id, placerat pellentesque purus. Mauris sed nisi a felis finibus imperdiet et ut mi. Maecenas tempus aliquam libero, \n            euismod porta arcu volutpat a. Aenean dictum gravida ornare.\"\n          />\n          <ProjectCard title=\"Project 3\" \n            github=\"https://www.google.com/\" \n            live=\"https://www.google.com/\" \n            description=\"Suspendisse et tellus sit amet turpis rutrum faucibus sed iaculis sem. Cras nec dictum risus. \n            Integer ullamcorper libero a odio feugiat, nec condimentum quam pulvinar.\"\n          />\n          <ProjectCard title=\"Project 4\" \n            github=\"https://www.google.com/\" \n            live=\"https://www.google.com/\" \n            description=\"Suspendisse et tellus sit amet turpis rutrum faucibus sed iaculis sem. Cras nec dictum risus. \n            Integer ullamcorper libero a odio feugiat, nec condimentum quam pulvinar.\"\n          />\n        </div>\n      </div>\n      <div className=\"cat\">\n        <h3>CLICK THE CAT (messing around with states)</h3>\n        <Cat/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}